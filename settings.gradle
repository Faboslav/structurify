pluginManagement {
	repositories {
		gradlePluginPortal()
		maven { url "https://maven.fabricmc.net/" }
		maven { url "https://maven.architectury.dev/" }
		maven { url "https://files.minecraftforge.net/maven/" }
		maven { url "https://maven.kikugie.dev/releases" }
		maven { url "https://maven.kikugie.dev/snapshots" }
	}
}

plugins {
	id "dev.kikugie.stonecutter" version "0.5-project-trees.5"
}

rootProject.name = 'structurify'

def dists = [
	common: stonecutter_enabled_common_versions.split(',').collect { it.trim() },
	fabric: stonecutter_enabled_fabric_versions.split(',').collect { it.trim() },
	forge: stonecutter_enabled_forge_versions.split(',').collect { it.trim() },
	neoforge: stonecutter_enabled_neoforge_versions.split(',').collect { it.trim() }
]

def uniqueVersions = dists.values().flatten().unique().collect { "'${it}'" }.join(", ")

stonecutter {
	/*
	for (def dist : dists.entrySet()) {
		def platform = dist.getKey()
		def platformVersions = dist.getValue()

		include(platform)

		shared {
			versions(platformVersions)
		}

		create(project(":$platform"))
	}

	shared {
		versions uniqueVersions.split(", ").collect { it.replaceAll("'", "") }
	}

	create(rootProject)*/


	create(rootProject) {
		versions("1.20.1", "1.21.1")
		branch("common", b -> {
			b.versions("1.20.1", "1.21.1")
		})
		branch("fabric", b -> {
			b.versions("1.20.1", "1.21.1")
		})
		branch("forge", b -> {
			b.versions("1.20.1")
		})
		branch("neoforge", b -> {
			b.versions("1.21.1")
		})
	}
}